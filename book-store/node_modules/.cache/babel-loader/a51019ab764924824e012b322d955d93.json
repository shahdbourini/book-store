{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nexport const getBooks = createAsyncThunk('book/getBooks', async (_, thunkAPI) => {\n  const {\n    rejectWithValue\n  } = thunkAPI;\n\n  try {\n    const res = await fetch('http://localhost:3005/books');\n    const data = await res.json();\n    return data;\n  } catch (err) {\n    return rejectWithValue(err.message);\n  }\n});\n/* insert book */\n\nexport const insertBook = createAsyncThunk('book/insertBook', async (book, thunkAPI) => {\n  const {\n    rejectWithValue\n  } = thunkAPI;\n\n  try {\n    const res = await fetch('http://localhost:3005/books', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(book)\n    });\n    const data = await res.json();\n    return data;\n  } catch (err) {\n    return rejectWithValue(err.message);\n  }\n});\nconst bookSlice = createSlice({\n  name: 'books',\n  initialState: {\n    books: [],\n    isLoading: false,\n    error: null,\n    info: []\n  },\n  reducers: {\n    readBook: (state, action) => {\n      // state.info= state.books.slice((book) =>{ book.id === action.payload});\n      var filtered = state.books.filter(function (e) {\n        return this.indexOf(e) === action.payload;\n      });\n      console.log(state.books);\n    }\n  },\n  extraReducers: {\n    [getBooks.pending]: (state, action) => {\n      state.isLoading = true;\n      state.error = null; // console.log(action);\n    },\n    [getBooks.fulfilled]: (state, action) => {\n      state.isLoading = false;\n      state.books = action.payload; // console.log(action);\n    },\n    [getBooks.rejected]: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n      console.log(action);\n    },\n\n    /*insert book */\n    [insertBook.pending]: (state, action) => {\n      state.isLoading = true;\n      state.error = null;\n      console.log(action);\n    },\n    [insertBook.fulfilled]: (state, action) => {\n      state.isLoading = false;\n      state.books.push(action.payload);\n      console.log(action);\n    },\n    [insertBook.rejected]: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n      console.log(action);\n    }\n  }\n});\nexport const {\n  readBook\n} = bookSlice.actions;\nexport default bookSlice.reducer;","map":{"version":3,"sources":["D:/bookStore-redux/book-store/src/store/bookSlice.js"],"names":["createSlice","createAsyncThunk","getBooks","_","thunkAPI","rejectWithValue","res","fetch","data","json","err","message","insertBook","book","method","headers","body","JSON","stringify","bookSlice","name","initialState","books","isLoading","error","info","reducers","readBook","state","action","filtered","filter","e","indexOf","payload","console","log","extraReducers","pending","fulfilled","rejected","push","actions","reducer"],"mappings":"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","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\nexport const getBooks = createAsyncThunk('book/getBooks', async (_, thunkAPI) => {\r\n  const { rejectWithValue } = thunkAPI\r\n  try {\r\n    const res = await fetch('http://localhost:3005/books');\r\n    const data = await res.json();\r\n    return data\r\n  }\r\n  catch (err) {\r\n    return rejectWithValue(err.message)\r\n\r\n  }\r\n});\r\n\r\n/* insert book */\r\nexport const insertBook = createAsyncThunk('book/insertBook', async (book, thunkAPI) => {\r\n  const { rejectWithValue } = thunkAPI\r\n  try {\r\n    const res = await fetch('http://localhost:3005/books', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(book),\r\n    });\r\n    const data = await res.json();\r\n    return data\r\n  }\r\n  catch (err) {\r\n    return rejectWithValue(err.message);\r\n  }\r\n});\r\n\r\n\r\n\r\nconst bookSlice = createSlice({\r\n  name: 'books',\r\n  initialState: { books: [], isLoading: false, error: null , info: []},\r\n\r\n  reducers: {\r\n    readBook: (state, action) => {\r\n        // state.info= state.books.slice((book) =>{ book.id === action.payload});\r\n        var filtered = state.books.filter(\r\n          function(e) {\r\n            return this.indexOf(e) === action.payload;\r\n          },)\r\n        console.log(state.books);\r\n        \r\n    },\r\n},\r\n\r\n  extraReducers: {\r\n    [getBooks.pending]: (state, action) => {\r\n      state.isLoading = true;\r\n      state.error = null;\r\n      // console.log(action);\r\n\r\n    },\r\n    [getBooks.fulfilled]: (state, action) => {\r\n      state.isLoading = false;\r\n      state.books = action.payload;\r\n      // console.log(action);\r\n    },\r\n    [getBooks.rejected]: (state, action) => {\r\n      state.isLoading = false;\r\n      state.error = action.payload;\r\n      console.log(action);\r\n    },\r\n\r\n    /*insert book */\r\n    [insertBook.pending]: (state, action) => {\r\n      state.isLoading = true;\r\n      state.error = null;\r\n      console.log(action);\r\n    },\r\n\r\n    [insertBook.fulfilled]: (state, action) => {\r\n      state.isLoading = false;\r\n      state.books.push(action.payload) ;\r\n      console.log(action);\r\n    },\r\n    [insertBook.rejected]: (state, action) => {\r\n      state.isLoading = false;\r\n      state.error = action.payload;\r\n      console.log(action);\r\n    },\r\n\r\n\r\n}});\r\n\r\n\r\nexport const { readBook } = bookSlice.actions;\r\n\r\nexport default bookSlice.reducer;"]},"metadata":{},"sourceType":"module"}