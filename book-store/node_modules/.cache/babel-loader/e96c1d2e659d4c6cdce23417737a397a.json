{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nexport const getBooks = createAsyncThunk('book/getBooks', async (_, thunkAPI) => {\n  try {\n    const res = await fetch('http://localhost:3005/books');\n    const data = await res.json();\n    return data;\n  } catch (err) {\n    console.log(err);\n  }\n});\nconst bookSlice = createSlice({\n  name: 'books',\n  initialState: {\n    books: null,\n    isLoading: false\n  },\n  extraReducers: {\n    [getBooks.pending]: (state, action) => {\n      state.isLoading = true;\n      console.log(action);\n    },\n    [getBooks.fulfilled]: (state, action) => {\n      state.isLoading = false;\n      console.log(action);\n    },\n    [getBooks.rejected]: (state, action) => {\n      state.isLoading = false;\n      console.log(action);\n    }\n  }\n});\nexport default bookSlice.reducer;","map":{"version":3,"sources":["D:/bookStore-redux/book-store/src/store/bookSlice.js"],"names":["createSlice","createAsyncThunk","getBooks","_","thunkAPI","res","fetch","data","json","err","console","log","bookSlice","name","initialState","books","isLoading","extraReducers","pending","state","action","fulfilled","rejected","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AAEC,OAAO,MAAMC,QAAQ,GAAGD,gBAAgB,CAAC,eAAD,EAAkB,OAAOE,CAAP,EAAUC,QAAV,KAAuB;AAChF,MAAG;AACD,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,6BAAD,CAAvB;AACA,UAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACA,WAAOD,IAAP;AACD,GAJD,CAKA,OAAME,GAAN,EAAU;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,CATwC,CAAjC;AAYR,MAAMG,SAAS,GAAGZ,WAAW,CAAE;AAC3Ba,EAAAA,IAAI,EAAE,OADqB;AAE3BC,EAAAA,YAAY,EAAE;AAAEC,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,SAAS,EAAE;AAA1B,GAFa;AAG3BC,EAAAA,aAAa,EAAE;AACb,KAACf,QAAQ,CAACgB,OAAV,GAAoB,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrCD,MAAAA,KAAK,CAACH,SAAN,GAAkB,IAAlB;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAYS,MAAZ;AAED,KALY;AAMb,KAAClB,QAAQ,CAACmB,SAAV,GAAsB,CAACF,KAAD,EAAQC,MAAR,KAAmB;AACvCD,MAAAA,KAAK,CAACH,SAAN,GAAkB,KAAlB;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAYS,MAAZ;AACH,KATc;AAUf,KAAClB,QAAQ,CAACoB,QAAV,GAAoB,CAACH,KAAD,EAASC,MAAT,KAAmB;AACrCD,MAAAA,KAAK,CAACH,SAAN,GAAkB,KAAlB;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAYS,MAAZ;AACD;AAbc;AAHY,CAAF,CAA7B;AAoBA,eAAeR,SAAS,CAACW,OAAzB","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\n export const getBooks = createAsyncThunk('book/getBooks', async (_, thunkAPI) => {\r\n  try{\r\n    const res = await fetch('http://localhost:3005/books');\r\n    const data = await res.json();\r\n    return data\r\n  } \r\n  catch(err){\r\n    console.log(err);\r\n  }\r\n});\r\n\r\n\r\nconst bookSlice = createSlice ({\r\n    name: 'books',\r\n    initialState: { books: null, isLoading: false },\r\n    extraReducers: {\r\n      [getBooks.pending]: (state, action) => {\r\n        state.isLoading = true;\r\n        console.log(action);\r\n\r\n      },\r\n      [getBooks.fulfilled]: (state, action) => { \r\n        state.isLoading = false;\r\n        console.log(action); \r\n    },\r\n    [getBooks.rejected]:(state , action) =>{\r\n      state.isLoading = false;\r\n      console.log(action);\r\n    },\r\n  },\r\n  });\r\n\r\nexport default bookSlice.reducer;"]},"metadata":{},"sourceType":"module"}